// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL1")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  robotData RobotData?
  fields    CropField[] 
}

model CropField {
  id        Int      @id @default(autoincrement())
  fieldname String
  crop      String
  area      Decimal?
  latitude  Decimal   
  longitude Decimal
  createdAt DateTime @default(now())
  author    User @relation(fields: [ownerId], references: [id])
  ownerId Int
  measurements Measurement[]
}

model Measurement {
  id        Int       @id @default(autoincrement())
  duration  Float     @default(0)
  explored  Float     @default(0)
  createdAt DateTime @default(now())
  field     CropField @relation(fields: [fieldId], references: [id])
  fieldId   Int
  healthyPlants HealthyPlant[]
  diseasedPlants DiseasedPlant[]
}

model HealthyPlant {
  id        Int       @id @default(autoincrement())
  latitude  Decimal   
  longitude Decimal
  crop      String
  imageUrl  String?
  measurement  Measurement @relation(fields: [measurementId], references: [id])
  measurementId Int
}

model DiseasedPlant {
  id        Int     @id @default(autoincrement())
  latitude  Decimal
  longitude Decimal
  crop      String
  disease   String
  imageUrl  String?
  measurement Measurement @relation(fields: [measurementId], references: [id])
  measurementId Int
}

model Disease {
  id             Int   @id @default(autoincrement())
  diseaseName    String  @unique
  imageUrl       String?
  affectedPlants DiseaseOnPlantType[]
  affectedParts  String
  description    String
}

model PlantType {
  id          Int     @id   @default(autoincrement())
  plantName   String  @unique
  latinName   String  @unique
  variety     String
  diseases    DiseaseOnPlantType[]
}

model DiseaseOnPlantType {
  plantType   PlantType   @relation(fields: [plantTypeId], references: [id])
  plantTypeId Int   
  disease     Disease     @relation(fields: [diseaseid], references: [id])
  diseaseid   Int

  @@id([plantTypeId, diseaseid])
}

model RobotData {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id])
  userId      Int         @unique
  timeUsed    Float       @default(0)
  lastBattery Int         @default(100)
  lastUsed    DateTime    @default(now())         
}